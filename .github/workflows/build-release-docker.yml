---
# 1. create a version tag
# 2. create a release
# 3. push the tag to origin
# 4. create a container image
# 5. push the image to docker hub

name: build and release
on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: geekzone/weepingangel

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.run_number }},${{ env.IMAGE_NAME }}:latest

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.11.2
        with:
          image-ref: '${{ env.IMAGE_NAME }}:${{ github.run_number }}'
          format: 'sarif'
          output: trivy-results.sarif
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif

      - name: Push to DockerHub
        if: ${{ success() }}
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ github.run_number }}
          docker push ${{ env.IMAGE_NAME }}:latest

      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: 'release.zip'
          path: 'src/*'

      - name: Upload Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: "release.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest